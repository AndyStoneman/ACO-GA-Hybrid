#BlueJ class context
comment0.target=AGHybrid
comment0.text=\n\ Implementation\ of\ a\ hybrid\ basic\ Ant\ System\ algorithm\ and\ a\ genetic\ algorithm,\ used\ to\ solve\ TSP.\ An\ Ant's\n\ tour\ is\ considered\ a\ candidate\ solution,\ which\ can\ then\ be\ run\ through\ the\ GA\ process\ of\ selection,\ \n\ recombination,\ and\ mutation.\ This\ GA\ implementation\ uses\ tournament\ selection,\ and\ allows\ the\ user\ to\ \n\ choose\ between\ ordered\ crossover\ ('OX')\ and\ partially\ mapped\ crossover\ ('PMX').\ Also\ note\ that\ mutation\ was\ \n\ not\ used\ in\ the\ GA\ portion,\ as\ it\ worsened\ solutions.\ \n\n\ @author\ Andy\ Stoneman,\ Michael\ Webber,\ Alex\ Clark\n\ @version\ 5/20/2022\n
comment1.params=fileName\ optTour\ percentageCutoff\ numIterations\ targetCutoff\ crossoverType
comment1.target=AGHybrid(java.lang.String,\ double,\ boolean,\ int,\ double,\ java.lang.String)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ AGHybrid.\ Sets\ number\ of\ cities\ based\ on\ file\ parsing.\ \n
comment10.params=parentAnts
comment10.target=void\ partiallyMappedCrossover(Ant[])
comment10.text=\n\ Implementation\ of\ partially\ mapped\ crossover\ operator.\ Uses\ two\ random\ cut\ points\ and\ a\ mapping\ system\n\ between\ these\ two\ cut\ points\ for\ each\ parent.\ Fills\ in\ the\ children\ outside\ of\ the\ cut\ point\ where\ \n\ possible,\ and\ then\ uses\ mapping\ to\ complete\ the\ rest\ to\ avoid\ duplicates.\n\ \n\ @param\ parentAnts\n\ \ \ \ \ \ The\ parent\ ants\ that\ were\ chosen\ from\ the\ tournament\ selection\ for\ breeding.\n
comment11.params=parentAnts
comment11.target=void\ orderCrossover(Ant[])
comment11.text=\n\ Implementation\ of\ order\ crossover\ operator.\ Uses\ two\ random\ cut\ points\ to\ create\ a\ specific\ section\ in\n\ the\ child,\ and\ then\ inserts\ the\ opposite\ parents\ order\ without\ the\ numbers\ between\ the\ cut\ points,\ \n\ avoiding\ duplicates.\ \n\ \n\ @param\ parentAnts\n\ \ \ \ \ \ The\ parent\ ants\ that\ were\ chosen\ from\ the\ tournament\ selection\ for\ breeding.\ \n
comment12.params=antCollection
comment12.target=double\ updatepheromoneLevels(Ant[])
comment12.text=\n\ Helper\ method\ that\ updates\ pheromone\ levels\ after\ an\ iteration\ has\ completed\ and\ all\ tours\ have\ been\n\ constructed.\ Evaporates\ all\ legs\ at\ constant\ rate\ and\ deposits\ on\ legs\ that\ were\ in\ an\ ants\ tour\n\ proportional\ to\ the\ length\ of\ the\ ants\ tour.\ Also\ returns\ the\ best\ tour\ amongst\ the\ all\ of\ the\ ants\n\ in\ that\ iteration.\n\ \n\ @param\ antCollection\n\ \ \ \ \ \ The\ collection\ of\ ants\ that\ will\ be\ constructing\ tours\ with.\n\ \ \ \ \ \ \n\ @return\n\ \ \ \ \ \ The\ best\ (smallest)\ tour\ from\ this\ iteration.\ \n
comment2.params=
comment2.target=void\ getCityPositions()
comment2.text=\n\ Gets\ all\ of\ the\ positions\ from\ the\ file\ so\ the\ file\ does\ not\ have\ to\ be\ read\ more\ than\ once.\ \n\ Allows\ for\ euclidean\ distances\ to\ be\ calculated\ much\ more\ easily.\ Stores\ positions\ in\ list\ of\ lists.\n
comment3.params=
comment3.target=void\ getDistances()
comment3.text=\n\ Based\ on\ city\ positions,\ calculates\ all\ of\ the\ euclidean\ distances,\ and\ stores\ them\ in\ a\ 2d\ array,\ \n\ where\ column\ and\ row\ numbers\ represent\ two\ different\ cities.\ The\ array\ is\ mirrored\ over\ the\ \n\ diagonal,\ and\ every\ value\ in\ the\ diagonal\ is\ a\ 0,\ since\ the\ distance\ between\ the\ same\ city\ is\ 0.\n
comment4.params=
comment4.target=void\ initializePheromoneLevels()
comment4.text=\n\ Creates\ default\ values\ for\ the\ pheromone\ levels\ before\ ants\ have\ constructed\ any\ tours.\ Levels\ \n\ are\ calculated\ by,\ starting\ at\ a\ random\ city\ and\ choosing\ the\ next\ closest\ city\ based\ on\ the\ \n\ distances\ just\ calculated.\ Once\ the\ tour\ is\ complete,\ it\ takes\ the\ number\ of\ ants\ and\ divides\ \n\ them\ by\ the\ total\ distance\ of\ the\ tour.\ We\ then\ set\ all\ pheromone\ levels\ on\ every\ leg\ to\ this\ \n\ default\ value.\ Also\ known\ as\ nearest\ neighbor\ tour.\n
comment5.params=
comment5.target=void\ solve()
comment5.text=\n\ This\ method\ runs\ the\ entire\ AGHybrid\ process,\ acting\ as\ a\ blueprint\ for\ the\ entire\ thing.\ It\ calls\n\ on\ helper\ methods\ and\ also\ performs\ aspects\ of\ the\ algorithm\ within\ it\ as\ well.\ \n
comment6.params=
comment6.target=void\ constructTours()
comment6.text=\n\ Helper\ method\ that\ constructs\ tours\ for\ all\ ants\ and\ creates\ a\ list\ of\ all\ cities\ used\ to\ determine\n\ which\ cities\ haven't\ been\ visited\ yet.\ \n\ \n\ @param\ antCollection\n\ \ \ \ \ \ The\ collection\ of\ ants\ that\ will\ be\ constructing\ tours\ with.\ \n
comment7.params=ant\ cities
comment7.target=void\ makeSingleTour(Ant,\ java.util.ArrayList)
comment7.text=\n\ Helper\ method\ that\ constructs\ a\ tour\ for\ a\ singular\ ant.\ Does\ this\ by\ calling\ on\ another\ method\n\ to\ determine\ probabilities\ of\ visiting\ a\ city,\ and\ then\ picks\ from\ that\ list\ of\ probabilities.\ \n\ \n\ @param\ ant\n\ \ \ \ \ \ A\ singular\ ant\ whose\ tour\ we\ are\ constructing.\n\ @param\ cities\n\ \ \ \ \ \ A\ list\ of\ cities\ that\ represent\ what\ the\ ant\ has\ and\ hasn't\ visited\ yet.\ \n
comment8.params=
comment8.target=void\ calculateProbabilities()
comment8.text=\n\ Helper\ method\ used\ to\ calculate/update\ the\ 2d\ probability\ array.\ The\ values\ stored\ here\ are\ just\ the\n\ numerator\ portion\ of\ the\ probability\ equation\ for\ each\ leg\ in\ the\ problem.\ We\ calculate\ their\ sum\ \n\ based\ on\ remaining\ cities\ and\ divide\ them\ when\ actually\ checking\ in\ the\ makeSingleTour\ method.\ Probability\n\ is\ based\ on\ the\ pheromone\ level\ and\ distance\ for\ each\ leg\ in\ the\ numerator,\ and\ is\ divided\ by\ the\ sum\n\ of\ all\ available\ cities\ to\ determine\ a\ probability.\n
comment9.params=
comment9.target=void\ gaUpdate()
comment9.text=\n\ Runs\ the\ genetic\ algorithm\ portion\ of\ the\ hybrid.\ Picks\ half\ the\ number\ of\ ants\ using\ tournament\ selection\n\ and\ then\ calls\ specified\ crossover\ operator.\ \n
numComments=13
